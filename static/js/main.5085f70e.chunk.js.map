{"version":3,"sources":["logo.svg","chad-montano-MqT0asuoIcU-unsplash.jpg","serviceWorker.js","Components/MultiselectOptions.js","Components/Review.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Button","styled","button","props","primary","secondary","MultiselectOptions","onClickButton","entry","setState","chosen","state","options","filter","option","removeChosenOptions","showChosenItems","this","console","log","style","display","flexWrap","width","map","idx","onClick","triggerNextStep","trigger","value","length","Component","Review","name","pno","pizza","toppings","steps","textAlign","borderSpacing","padding","rowSpan","id","message","label","component","waitAction","asMessage","user","ReactDOM","render","position","top","bottom","left","right","backgroundImage","Background","color","paddingLeft","paddingTop","fontSize","floating","floatingStyle","transformOrigin","borderRadius","botDelay","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5085f70e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/chad-montano-MqT0asuoIcU-unsplash.cc7a458d.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { red } from 'color-name';\n\nconst Button = styled.button`\nbackground: ${props => props.primary ? \"blue\" : props.secondary?\"blueviolet\":\"white\"};\ncolor: ${props => props.primary ? \"white\" : props.secondary?\"white\":\"blueviolet\"};\nfont-size: 1em;\nmargin: 0.2em;\npadding: 0.25em 1em;\nborder: 2px solid blue;\nborder-radius: 10px;\n`;\n\nclass MultiselectOptions extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            options: [],\n            chosen: [],\n            showChosenItems: false\n        };\n        // this.onClickButton = this.onClickButton.bind(this)\n    }\n\n    componentWillMount() {\n        const { options } = this.props;\n        //   const { name, gender, age } = steps;\n\n        this.setState({ options });\n    }\n\n    onClickButton =(entry) =>{\n        this.setState({chosen: [...this.state.chosen, entry]})\n        this.setState({options: this.state.options.filter(option=>option!==entry)})\n    }\n    removeChosenOptions = (entry) => {\n        this.setState({options: [...this.state.options, entry]})\n        this.setState({chosen: this.state.chosen.filter(option=>option!==entry)})\n\n    }\n\n    render() {\n        console.log(this.state)\n        const { options } = this.state;\n        return (\n            !this.state.showChosenItems?\n            <div style={{ width: '100%' }}>\n                <h3>Select Toppings</h3>\n                <div style={{display: \"flex\", flexWrap: \"wrap\", width: 180}}>\n                {\n                    options.map((entry, idx) =>\n                        <div>\n                            <Button onClick={()=>this.onClickButton(entry)}>{entry}</Button>\n                        </div>\n                    )\n                }\n                </div>\n                <br />\n                <Button primary onClick={() => {\n                    this.props.triggerNextStep({ trigger: '6', value: this.state.chosen })\n                    this.setState({showChosenItems: true})\n                    }}>Done</Button>\n                {\n                    this.state.chosen.length>0 &&\n                    <div style= {{display:\"flex\", flexWrap: \"wrap\", width: 180}}>\n                       {\n                        this.state.chosen.map((entry, idx)=>\n                            <Button secondary onClick={() => {this.removeChosenOptions(entry)}}>{entry}</Button>\n                    )} \n                    </div>\n                }\n            </div>\n            :\n            <div>\n                <h3>Selected Toppings</h3>\n                <div style= {{display:\"flex\", flexWrap: \"wrap\", width: 180}}>\n                {\n                    this.state.chosen.map((entry, idx)=>\n                        <Button primary>{entry}</Button>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default MultiselectOptions;","import React, { Component } from 'react';\n\nclass Review extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            pno: '',\n            pizza: '',\n            toppings: ''\n        };\n    }\n\n    componentWillMount() {\n        const { steps } = this.props;\n        const { name, pno, pizza, toppings } = steps;\n\n        this.setState({ name, pno, pizza, toppings });\n    }\n\n    render() {\n        const { name, pno, pizza, toppings } = this.state;\n        return (\n            <div >\n                <h3>Your Order</h3>\n                <table style={{ width: '180', display: \"flex\", flexWrap: \"wrap\",\n                 textAlign: \"left\",borderSpacing: 5,padding: 5 }}>\n                    <tbody>\n                        <tr>\n                            <th>Pizza</th>\n                            <td>{pizza.value}</td>\n                        </tr>\n                        <tr>\n                            <th rowSpan={toppings.value.length}>Toppings</th>\n                            {\n                                toppings.value.map((entry)=>\n                                    <tr><td>{entry}</td></tr>\n                                )\n                            }\n                        </tr>\n                        <hr/>\n                        <tr>\n                            <th>Name</th>\n                            <td>{name.value}</td>\n                        </tr>\n                        <tr>\n                            <th>Phone No.</th>\n                            <td>{pno.value}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default Review;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Background from './chad-montano-MqT0asuoIcU-unsplash.jpg'\nimport MultiselectOptions from './Components/MultiselectOptions'\nimport Review from './Components/Review'\n\nimport ChatBot from 'react-simple-chatbot';\n\nconst steps = [\n    {\n        id: '1',\n        message: 'Welcome to YoYo Pizza',\n        trigger: '2',\n    },\n    {\n        id: '2',\n        message: 'Can I help you with any of these',\n        trigger: '3',\n    },\n    {\n        id: '3',\n        options: [\n            { value: 1, label: 'Order Pizza', trigger: '4' },\n            { value: 2, label: 'Check Order Status', trigger: '10' },\n          ],    \n    },\n    {\n        id: '4',\n        message: 'What you want? We have...',\n        trigger: 'pizza',\n    },\n    {\n        id: 'pizza',\n        options: [\n            { value:'Margherita', label: 'Margherita', trigger: 'toppings'},\n            { value:2, label: 'Marinara', trigger: 'toppings'},\n        ],\n    },\n    {\n        id: 'toppings',\n        component: <MultiselectOptions options ={['Onions', 'Cheese', 'Peppers', 'Olives', 'Pineapple', 'Chicken', 'Tofu']}/>,\n        waitAction: true,\n        asMessage: true,\n        trigger:'6'\n    },\n    {\n        id: '6',\n        message: `Your Order will be ready in 20 mins`,\n        trigger: '7'\n    },\n    {\n        id: '7',\n        message:'May I get your Name?',\n        trigger: 'name'\n    },\n    {\n        id: 'name',\n        user: true,\n        trigger: '8'\n    },\n    {\n        id: '8',\n        message: \"And your Phone No.\",\n        trigger: \"pno\"\n    },\n    {\n        id:\"pno\",\n        user:true,\n        trigger: 'review'\n    },\n    {\n        id:\"review\",\n        component: <Review />,\n        asMessage: true,\n        trigger: 'gen_id'\n    },\n    {\n        id:\"gen_id\",\n        message: \"Your Order ID is 123123123\",\n        trigger:'3'\n    },\n    {\n        id: '10',\n        message: 'Enter you Order ID',\n        trigger: '11'\n    },\n    {\n        id :'11',\n        user: true,\n        trigger: '12'\n    },\n    {\n        id: '12',\n        message: \"You have been served, LMAO that's funny\",\n        trigger: '3'\n    }\n];\n\nReactDOM.render(\n    <div style = {{ position:\"absolute\",top:0,bottom:0, left:0,right:0, backgroundImage: `url(${Background})`}}>\n        <h1 style={{color: \"white\", paddingLeft: 20, paddingTop:20, fontSize: 60}}>yoYO Pizza</h1>\n        <h3 style={{color: \"white\", paddingLeft: 20}}>Pizza that tastes as good as it looks.</h3>\n        <ChatBot steps={steps}\n            floating={true}\n            floatingStyle={{\n                left: 'calc(100% - 80px)',\n                right: 'initial',\n                transformOrigin: 'bottom right',\n                borderRadius: 0,\n            }}\n            botDelay={10}\n            style={{\n                left: 'calc(80% - 125px)',\n            }}\n             />\n    </div>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}